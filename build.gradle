plugins {
    alias libs.plugins.unimined apply false
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'xyz.wagyourtail.unimined'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.version}+mc${libs.versions.minecraft.get()}"
    group = rootProject.group

    java {
        withSourcesJar()
    }

    unimined {
        useGlobalCache = false
    }

    repositories {
        mavenCentral()
        maven {
            name = "MinecraftForge"
            url = "https://maven.minecraftforge.net/"
            metadataSources {
                artifact()
            }
        }
        maven {
            name = "FabricMC"
            url = "https://maven.fabricmc.net/"
        }
        maven {
		    name = "JitPack"
		    url = "https://jitpack.io"
	    }
	    maven {
	    	name = "Shedaniel's Maven"
	    	url = "https://maven.shedaniel.me/"
	    }
	    maven {
	    	name = "TerraformersMC"
	    	url = "https://maven.terraformersmc.com/releases/"
	    }
	    maven {
	    	name = "Gegy Maven"
	    	url = "https://maven.gegy.dev"
	    }
	    maven {
	    	name = "QuiltMC Release"
	    	url = "https://maven.quiltmc.org/repository/release/"
	    }
	    maven {
	    	name = "QuiltMC Snapshot"
	    	url = "https://maven.quiltmc.org/repository/snapshot/"
	    }
    }

    dependencies {
        minecraft rootProject.libs.minecraft

        mappings variantOf(rootProject.libs.intermediary) { classifier 'v2' }
        mappings variantOf(rootProject.libs.quilt.mappings) { classifier 'intermediary-v2' }

        implementation rootProject.libs.quilt.json5
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        var version = 17
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = version
        }
    }

    task removeDist(type: Delete) {
        delete new File(rootProject.rootDir, "dist")
    }

    clean.finalizedBy(removeDist)

    jar {
        from("LICENSE") {
            rename { "${it}_${project.archivesBaseName}"}
        }
    }

    processResources {
        inputs.property "version", project.version

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'mods.toml', '*.mixins.json']) {
            expand project.properties
        }
    }
}

minecraft {
    runs.off = true
    combinedSourceSets = [sourceSets.main]

}

remapJar {
    target = "quilt"
}

dependencies {
    implementation "org.spongepowered:mixin:0.8.5"
    implementation "org.ow2.asm:asm:9.3"
}

jar {
    from sourceSets.main.output

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
